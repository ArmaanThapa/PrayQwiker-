<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd   
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	<context:annotation-config />
	<context:component-scan base-package="com.qwikr.webapi" />
	<mvc:annotation-driven />
	<tx:annotation-driven />
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10240000" />
	</bean>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/" />
			<bean class="com.qwikr.webapi.interceptor.PerformanceMonitorInterceptor"></bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/" />
			<bean class="com.qwikr.webapi.interceptor.AuditingInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>


	<!-- <context:property-placeholder location="classpath:jdbc.properties" 
		/> -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:location="/WEB-INF/jdbc.properties" />

	<!-- <bean id="messageSource" -->
	<!-- class="org.springframework.context.support.ResourceBundleMessageSource"> -->
	<!-- <property name="basename" value="messages" /> -->
	<!-- </bean> -->

	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	<!-- org.apache.commons.dbcp.BasicDataSource changed to class="org.springframework.jdbc.datasource.DriverManagerDataSource" 
		to get rid on pool not open -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.databaseurl}" p:username="${jdbc.username}" p:password="${jdbc.password}" />
	<!-- <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer"> 
		<property name="definitions"> <list> <value>/WEB-INF/spring/layout/tiles.xml</value> 
		<value></value> </list> </property> </bean> <bean id="viewResolver" class="org.springframework.web.servlet.view.tiles2.TilesViewResolver"/> -->

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>
		<property name="configurationClass">
			<value>org.hibernate.cfg.AnnotationConfiguration</value>
		</property>
		<property name="hibernateProperties">
			<props>
				<!-- JDBC connection pool (use the built-in) -->
				<prop key="connection.pool_size">1</prop>
				<!-- Enable Hibernate's automatic session context management -->
				<prop key="current_session_context_class">thread</prop>
				<!-- Disable the second-level cache -->
				<prop key="cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
				<prop key="hibernate.dialect">${jdbc.dialect}</prop>
				<!-- Echo all executed SQL to stdout -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="spring.datasource.testOnBorrow">true</prop>
				<!-- <prop key="spring.datasource.validationQuery">SELECT 1</prop> -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="gsrikanth831@gmail.com" />
		<property name="password" value="Srikath@123" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>

			</props>
		</property>
	</bean>
	<bean class="org.springframework.mail.SimpleMailMessage"></bean>

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<tx:annotation-driven />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
		<property name="host" value="smtp.gmail.com" /> <property name="username" 
		value="khanb05971@gmail.com" /> <property name="password" value="javed8123815971" 
		/> <property name="javaMailProperties"> <props> <prop key="mail.smtp.auth">true</prop> 
		<prop key="mail.smtp.port">587</prop> <prop key="mail.smtp.starttls.enable">true</prop> 
		<prop key="mail.debug">true</prop> </props> </property> </bean> -->

	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">class</prop>
				<prop key="class.resource.loader.class">
					org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
				</prop>
			</props>
		</property>
	</bean>
</beans>